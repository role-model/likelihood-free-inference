"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[924],{7161:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"getting-started","title":"Getting Started","description":"This section describes how to prepare your environment to run the simulation-based inference (SBI) pipeline. It covers installation, environment setup, and verified parameters for reliable simulation execution.","source":"@site/docs/getting-started.md","sourceDirName":".","slug":"/getting-started","permalink":"/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/role-model/likelihood-free-inference/docs/getting-started.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"getting-started","title":"Getting Started","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/"},"next":{"title":"SBI Pipeline","permalink":"/category/sbi-pipeline"}}');var s=t(4848),r=t(8453);const o={id:"getting-started",title:"Getting Started",sidebar_position:2},l="Getting Started",a={},d=[{value:"System Requirements",id:"system-requirements",level:2},{value:"Installation (macOS/Linux)",id:"installation-macoslinux",level:2},{value:"Directory Layout",id:"directory-layout",level:2},{value:"Verified Simulation Parameters",id:"verified-simulation-parameters",level:2},{value:"Running a Test Notebook",id:"running-a-test-notebook",level:2},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,s.jsx)(n.p,{children:"This section describes how to prepare your environment to run the simulation-based inference (SBI) pipeline. It covers installation, environment setup, and verified parameters for reliable simulation execution."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"system-requirements",children:"System Requirements"}),"\n",(0,s.jsx)(n.p,{children:"Ensure the following tools are installed on your system:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Python \u2265 3.8"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"PyTorch \u2265 1.12"})," (with CUDA if GPU support is required)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Jupyter Notebook"})," or ",(0,s.jsx)(n.strong,{children:"JupyterLab"})]}),"\n",(0,s.jsxs)(n.li,{children:["Python scientific libraries: ",(0,s.jsx)(n.code,{children:"numpy"}),", ",(0,s.jsx)(n.code,{children:"scipy"}),", ",(0,s.jsx)(n.code,{children:"matplotlib"}),", ",(0,s.jsx)(n.code,{children:"seaborn"})]}),"\n",(0,s.jsxs)(n.li,{children:["SBI toolkit: ",(0,s.jsx)(n.code,{children:"sbi"})]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"installation-macoslinux",children:"Installation (macOS/Linux)"}),"\n",(0,s.jsx)(n.p,{children:"A virtual environment is recommended for dependency isolation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"python3 -m venv .venv\nsource .venv/bin/activate\npip install -e .\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If you are not using an editable installation ",(0,s.jsx)(n.code,{children:"(-e .)"})," , ensure that all dependencies are manually listed in ",(0,s.jsx)(n.code,{children:"requirements.txt"})," or installed via ",(0,s.jsx)(n.code,{children:"pip"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"To run on GPU:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118\n"})}),"\n",(0,s.jsx)(n.h2,{id:"directory-layout",children:"Directory Layout"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u251c\u2500\u2500 examples/ # All example notebooks and related outputs\n\u2502 \u251c\u2500\u2500 000-getting-started.ipynb\n\u2502 \u251c\u2500\u2500 001-sbi-pipeline.ipynb\n\u2502 \u251c\u2500\u2500 002-neural-network.ipynb\n\u2502 \u251c\u2500\u2500 003-sbi-gpu-acceleration.ipynb\n\u2502 \u251c\u2500\u2500 004-full-example.ipynb\n\u2502 \u251c\u2500\u2500 scratch.ipynb\n\u2502 \u2514\u2500\u2500 data/\n\u2502 \u251c\u2500\u2500 output.csv\n\u2502 \u251c\u2500\u2500 params.csv\n\u2502 \u251c\u2500\u2500 posterior.pt\n\u2502 \u2514\u2500\u2500 test-posterior.pt\n\u251c\u2500\u2500 my-website/ # Docusaurus documentation site\n\u251c\u2500\u2500 src/ # Python source code (package: roler)\n\u2502 \u2514\u2500\u2500 roler/\n\u251c\u2500\u2500 sbi-logs/ # Training logs and TensorBoard events\n\u251c\u2500\u2500 pyproject.toml # Project metadata and dependencies\n\u251c\u2500\u2500 main.ipynb # Entry-point notebook (optional)\n\u2514\u2500\u2500 README.md\n"})}),"\n",(0,s.jsx)(n.h2,{id:"verified-simulation-parameters",children:"Verified Simulation Parameters"}),"\n",(0,s.jsx)(n.p,{children:"The following parameter set is validated and known to run the simulation successfully. Alternative configurations may result in long runtimes or hanging behavior."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'original_param_distribution = {\n    "individuals_local": 100,\n    "individuals_meta": 1000,\n    "species_meta": 50,\n    "speciation_local": 0.05,\n    "speciation_meta": 0.05,\n    "extinction_meta": 0.05,\n    "env_sigma": 0.5,\n    "trait_sigma": 1,\n    "comp_sigma": 0.5,\n    "dispersal_prob": 0.1,\n    "mutation_rate": 0.01,\n    "equilib_escape": 1,\n    "num_basepairs": 250,\n    "init_type": "oceanic_island",\n    "niter": 10000,\n    "niterTimestep": 10\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"running-a-test-notebook",children:"Running a Test Notebook"}),"\n",(0,s.jsx)(n.p,{children:"To verify your environment:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Activate your virtual environment"}),"\n",(0,s.jsx)(n.li,{children:"Run:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"jupyter notebook\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsxs)(n.li,{children:["Open and execute the ",(0,s.jsx)(n.code,{children:"000-getting-started.ipynb"})," notebook"]}),"\n",(0,s.jsx)(n.li,{children:"Successful execution should:"}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Simulate data using the above parameters"}),"\n",(0,s.jsx)(n.li,{children:"Visualize intermediate results"}),"\n",(0,s.jsx)(n.li,{children:"Return an inference-ready dataset"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsx)(n.p,{children:"Continue to the SBI Pipeline section to explore the components used to implement simulation-based inference."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);