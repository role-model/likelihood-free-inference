"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[375],{8453:(e,i,r)=>{r.d(i,{R:()=>o,x:()=>s});var n=r(6540);const t={},a=n.createContext(t);function o(e){const i=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(a.Provider,{value:i},e.children)}},9059:(e,i,r)=>{r.d(i,{A:()=>n});const n=r.p+"assets/images/flowchart-fe1f11be04f1065f0d81ab14bfad9d60.png"},9370:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"full-example/full-example","title":"Full Example","description":"This section presents a complete example of Simulation-Based Inference (SBI) applied to a real use case. It covers every stage of the workflow\u2014from parameter sampling and simulation to posterior estimation and result analysis.","source":"@site/docs/full-example/004-full-example.md","sourceDirName":"full-example","slug":"/full-example/full-example","permalink":"/likelihood-free-inference/full-example/full-example","draft":false,"unlisted":false,"editUrl":"https://github.com/role-model/likelihood-free-inference/docs/full-example/004-full-example.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"full-example","title":"Full Example","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Full Example","permalink":"/likelihood-free-inference/category/full-example"},"next":{"title":"Additional Notes","permalink":"/likelihood-free-inference/category/additional-notes"}}');var t=r(4848),a=r(8453);const o={id:"full-example",title:"Full Example",sidebar_position:1},s="Full Example",l={},d=[{value:"Objective",id:"objective",level:2},{value:"Workflow Overview",id:"workflow-overview",level:2},{value:"1. Define the Prior",id:"1-define-the-prior",level:2},{value:"2. Simulate Training Data",id:"2-simulate-training-data",level:2},{value:"3. Train the Posterior Estimator",id:"3-train-the-posterior-estimator",level:2},{value:"4. Load and Condition on Observation",id:"4-load-and-condition-on-observation",level:2},{value:"5. Posterior Validation",id:"5-posterior-validation",level:2},{value:"6. Save/Load Posterior for Reuse",id:"6-saveload-posterior-for-reuse",level:2},{value:"Files Referenced",id:"files-referenced",level:2},{value:"Summary",id:"summary",level:2}];function p(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"full-example",children:"Full Example"})}),"\n",(0,t.jsx)(i.p,{children:"This section presents a complete example of Simulation-Based Inference (SBI) applied to a real use case. It covers every stage of the workflow\u2014from parameter sampling and simulation to posterior estimation and result analysis."}),"\n",(0,t.jsxs)(i.p,{children:["This example corresponds to the notebook ",(0,t.jsx)(i.code,{children:"004-full-example.ipynb"}),"."]}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h2,{id:"objective",children:"Objective"}),"\n",(0,t.jsx)(i.p,{children:"This full example demonstrates how SBI can be applied to a parameter inference problem using a domain-specific simulator. The goal is to recover posterior estimates for unknown model parameters using observed data and simulation-based training."}),"\n",(0,t.jsx)(i.p,{children:"Estimate the posterior distribution over model parameters given a single observed dataset, using a validated simulator and a predefined prior distribution."}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h2,{id:"workflow-overview",children:"Workflow Overview"}),"\n",(0,t.jsx)(i.p,{children:"The diagram below illustrates the full SBI pipeline, from sampling the prior and simulating data, to generating a dataset and training a posterior model."}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.img,{alt:"SBI workflow diagram",src:r(9059).A+"",width:"1920",height:"1080"})}),"\n",(0,t.jsx)(i.h2,{id:"1-define-the-prior",children:"1. Define the Prior"}),"\n",(0,t.jsx)(i.p,{children:"A prior distribution is specified over the input parameters. These parameters are drawn from a domain-specific distribution based on known ranges and physical constraints."}),"\n",(0,t.jsx)(i.p,{children:"Example:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"# Prior over 3 parameters: [param1, param2, param3]\nprior = BoxUniform(\n    low=torch.tensor([0.0, 0.0, 0.0]),\n    high=torch.tensor([1.0, 5.0, 10.0])\n)\n\n"})}),"\n",(0,t.jsx)(i.p,{children:"Ensure that all sampled parameters produce valid simulator outputs."}),"\n",(0,t.jsx)(i.h2,{id:"2-simulate-training-data",children:"2. Simulate Training Data"}),"\n",(0,t.jsx)(i.p,{children:"Simulate \ud835\udc41 parameter\u2013observation pairs using the simulator:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"theta = prior.sample((N,))\nx = torch.stack([simulator(t) for t in theta])\n"})}),"\n",(0,t.jsx)(i.p,{children:"If the simulator is vectorized, this step can be significantly optimized."}),"\n",(0,t.jsx)(i.h2,{id:"3-train-the-posterior-estimator",children:"3. Train the Posterior Estimator"}),"\n",(0,t.jsx)(i.p,{children:"Use SNPE to train a neural density estimator:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"inference = SNPE(prior)\ndensity_estimator = inference.append_simulations(theta, x).train()\nposterior = inference.build_posterior(density_estimator)\n"})}),"\n",(0,t.jsx)(i.p,{children:"Ensure data is transferred to GPU if available:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"theta, x = theta.to(device), x.to(device)\n"})}),"\n",(0,t.jsx)(i.h2,{id:"4-load-and-condition-on-observation",children:"4. Load and Condition on Observation"}),"\n",(0,t.jsxs)(i.p,{children:["Load the reference observation (e.g., from ",(0,t.jsx)(i.code,{children:"output.csv"}),") and convert to a tensor:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"x_o = torch.tensor([...])  # from observed dataset\nsamples = posterior.sample((1000,), x=x_o)\n"})}),"\n",(0,t.jsx)(i.p,{children:"These samples represent the posterior over parameters conditioned on the observation."}),"\n",(0,t.jsx)(i.h2,{id:"5-posterior-validation",children:"5. Posterior Validation"}),"\n",(0,t.jsx)(i.p,{children:"Analyze the posterior samples using visualization and statistical diagnostics:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"import seaborn as sns\nimport matplotlib.pyplot as plt\n\nsns.pairplot(pd.DataFrame(samples.numpy(), columns=[...]))\nplt.show()\n"})}),"\n",(0,t.jsx)(i.p,{children:"Also consider posterior predictive checks or comparisons with known ground-truth parameters if available."}),"\n",(0,t.jsx)(i.h2,{id:"6-saveload-posterior-for-reuse",children:"6. Save/Load Posterior for Reuse"}),"\n",(0,t.jsx)(i.p,{children:"To reuse the trained posterior:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"torch.save(posterior, 'posterior.pt')\n"})}),"\n",(0,t.jsx)(i.p,{children:"Later, reload with:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"posterior = torch.load('posterior.pt')\nsamples = posterior.sample((1000,), x=x_o)\n"})}),"\n",(0,t.jsx)(i.p,{children:"This enables reproducible inference without retraining."}),"\n",(0,t.jsx)(i.h2,{id:"files-referenced",children:"Files Referenced"}),"\n",(0,t.jsxs)(i.p,{children:["This example makes use of the following files located in ",(0,t.jsx)(i.code,{children:"examples/data/"}),":"]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"output.csv: Observation vector used for conditioning"}),"\n",(0,t.jsx)(i.li,{children:"params.csv: True simulation parameters (if known)"}),"\n",(0,t.jsx)(i.li,{children:"posterior.pt: Trained posterior object"}),"\n",(0,t.jsx)(i.li,{children:"test-posterior.pt: Optional test posterior object for cross-validation"}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"summary",children:"Summary"}),"\n",(0,t.jsx)(i.p,{children:"This example demonstrates a complete SBI workflow using a custom simulator, a defined prior, and neural posterior estimation via SNPE. The process is fully automated and reproducible using the sbi library and GPU acceleration."}),"\n",(0,t.jsx)(i.p,{children:"This end-to-end approach can be adapted to other models by substituting the simulator and modifying the parameter space."})]})}function c(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}}}]);